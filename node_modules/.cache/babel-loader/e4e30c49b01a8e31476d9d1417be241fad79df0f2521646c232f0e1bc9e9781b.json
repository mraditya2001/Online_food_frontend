{"ast":null,"code":"import { api } from \"../../../config/api\";\nimport { createOrderFailure, createOrderRequest, createOrderSuccess, getUsersOrdersFailure, getUsersOrdersRequest, getUsersOrdersSuccess } from \"./ActionCreators\";\nimport { GET_USERS_NOTIFICATION_FAILURE, GET_USERS_NOTIFICATION_SUCCESS } from \"./ActionTypes\";\nexport const createOrder = reqData => {\n  return async dispatch => {\n    dispatch(createOrderRequest());\n    try {\n      const {\n        data\n      } = await api.post('/api/order', reqData.order, {\n        headers: {\n          Authorization: `Bearer ${reqData.jwt}`\n        }\n      });\n      if (data.payment_url) {\n        window.location.href = data.payment_url;\n      }\n      console.log(\"created order data\", data);\n      dispatch(createOrderSuccess(data));\n    } catch (error) {\n      console.log(\"error \", error);\n      dispatch(createOrderFailure(error));\n    }\n  };\n};\nexport const getUsersOrders = jwt => {\n  return async dispatch => {\n    dispatch(getUsersOrdersRequest());\n    try {\n      const {\n        data\n      } = await api.get(`/api/order/user`, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      console.log(\"users order \", data);\n      dispatch(getUsersOrdersSuccess(data));\n    } catch (error) {\n      dispatch(getUsersOrdersFailure(error));\n    }\n  };\n};\nexport const getUsersNotificationAction = () => {\n  return async dispatch => {\n    dispatch(createOrderRequest());\n    try {\n      const {\n        data\n      } = await api.get('/api/notifications');\n      console.log(\"all notifications \", data);\n      dispatch({\n        type: GET_USERS_NOTIFICATION_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(\"error \", error);\n      dispatch({\n        type: GET_USERS_NOTIFICATION_FAILURE,\n        payload: error\n      });\n    }\n  };\n};","map":{"version":3,"names":["api","createOrderFailure","createOrderRequest","createOrderSuccess","getUsersOrdersFailure","getUsersOrdersRequest","getUsersOrdersSuccess","GET_USERS_NOTIFICATION_FAILURE","GET_USERS_NOTIFICATION_SUCCESS","createOrder","reqData","dispatch","data","post","order","headers","Authorization","jwt","payment_url","window","location","href","console","log","error","getUsersOrders","get","getUsersNotificationAction","type","payload"],"sources":["D:/public/Downloads/food-ordering-project-2024-02-07-03-39-35/Source/frontend-react/src/State/Customers/Orders/Action.js"],"sourcesContent":["import { api } from \"../../../config/api\";\r\nimport { createOrderFailure, createOrderRequest, createOrderSuccess, getUsersOrdersFailure, getUsersOrdersRequest, getUsersOrdersSuccess } from \"./ActionCreators\";\r\nimport { GET_USERS_NOTIFICATION_FAILURE, GET_USERS_NOTIFICATION_SUCCESS } from \"./ActionTypes\";\r\n\r\n\r\nexport const createOrder = (reqData) => {\r\n  return async (dispatch) => {\r\n    dispatch(createOrderRequest());\r\n    try {\r\n      const {data} = await api.post('/api/order', reqData.order,{\r\n        headers: {\r\n            Authorization: `Bearer ${reqData.jwt}`,\r\n          },\r\n      });\r\n      if(data.payment_url){\r\n        window.location.href=data.payment_url;\r\n      }\r\n      console.log(\"created order data\",data)\r\n      dispatch(createOrderSuccess(data));\r\n    } catch (error) {\r\n      console.log(\"error \",error)\r\n      dispatch(createOrderFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const getUsersOrders = (jwt) => {\r\n  return async (dispatch) => {\r\n    dispatch(getUsersOrdersRequest());\r\n    try {\r\n      const {data} = await api.get(`/api/order/user`,{\r\n        headers: {\r\n            Authorization: `Bearer ${jwt}`,\r\n          },\r\n      });\r\n      console.log(\"users order \",data)\r\n      dispatch(getUsersOrdersSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getUsersOrdersFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const getUsersNotificationAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch(createOrderRequest());\r\n    try {\r\n      const {data} = await api.get('/api/notifications');\r\n     \r\n      console.log(\"all notifications \",data)\r\n      dispatch({type:GET_USERS_NOTIFICATION_SUCCESS,payload:data});\r\n    } catch (error) {\r\n      console.log(\"error \",error)\r\n      dispatch({type:GET_USERS_NOTIFICATION_FAILURE,payload:error});\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,qBAAqB;AACzC,SAASC,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,kBAAkB;AAClK,SAASC,8BAA8B,EAAEC,8BAA8B,QAAQ,eAAe;AAG9F,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAK;EACtC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAACT,kBAAkB,CAAC,CAAC,CAAC;IAC9B,IAAI;MACF,MAAM;QAACU;MAAI,CAAC,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,YAAY,EAAEH,OAAO,CAACI,KAAK,EAAC;QACxDC,OAAO,EAAE;UACLC,aAAa,EAAG,UAASN,OAAO,CAACO,GAAI;QACvC;MACJ,CAAC,CAAC;MACF,IAAGL,IAAI,CAACM,WAAW,EAAC;QAClBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAACT,IAAI,CAACM,WAAW;MACvC;MACAI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACX,IAAI,CAAC;MACtCD,QAAQ,CAACR,kBAAkB,CAACS,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACC,KAAK,CAAC;MAC3Bb,QAAQ,CAACV,kBAAkB,CAACuB,KAAK,CAAC,CAAC;IACrC;EACF,CAAC;AACH,CAAC;AAGD,OAAO,MAAMC,cAAc,GAAIR,GAAG,IAAK;EACrC,OAAO,MAAON,QAAQ,IAAK;IACzBA,QAAQ,CAACN,qBAAqB,CAAC,CAAC,CAAC;IACjC,IAAI;MACF,MAAM;QAACO;MAAI,CAAC,GAAG,MAAMZ,GAAG,CAAC0B,GAAG,CAAE,iBAAgB,EAAC;QAC7CX,OAAO,EAAE;UACLC,aAAa,EAAG,UAASC,GAAI;QAC/B;MACJ,CAAC,CAAC;MACFK,OAAO,CAACC,GAAG,CAAC,cAAc,EAACX,IAAI,CAAC;MAChCD,QAAQ,CAACL,qBAAqB,CAACM,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdb,QAAQ,CAACP,qBAAqB,CAACoB,KAAK,CAAC,CAAC;IACxC;EACF,CAAC;AACH,CAAC;AAGD,OAAO,MAAMG,0BAA0B,GAAGA,CAAA,KAAM;EAC9C,OAAO,MAAOhB,QAAQ,IAAK;IACzBA,QAAQ,CAACT,kBAAkB,CAAC,CAAC,CAAC;IAC9B,IAAI;MACF,MAAM;QAACU;MAAI,CAAC,GAAG,MAAMZ,GAAG,CAAC0B,GAAG,CAAC,oBAAoB,CAAC;MAElDJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACX,IAAI,CAAC;MACtCD,QAAQ,CAAC;QAACiB,IAAI,EAACpB,8BAA8B;QAACqB,OAAO,EAACjB;MAAI,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACC,KAAK,CAAC;MAC3Bb,QAAQ,CAAC;QAACiB,IAAI,EAACrB,8BAA8B;QAACsB,OAAO,EAACL;MAAK,CAAC,CAAC;IAC/D;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}