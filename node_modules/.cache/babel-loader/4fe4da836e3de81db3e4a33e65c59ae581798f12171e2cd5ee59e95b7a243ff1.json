{"ast":null,"code":"var _jsxFileName = \"D:\\\\public\\\\Downloads\\\\food-ordering-project-2024-02-07-03-39-35\\\\Source\\\\frontend-react\\\\src\\\\customers\\\\pages\\\\Auth\\\\ResetPaswordRequest.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button, TextField, Typography, CssBaseline, Container, createTheme, ThemeProvider, Backdrop, CircularProgress } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser, resetPassword, resetPasswordRequest } from \"../../../State/Authentication/Action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"\"\n};\nconst validationSchema = Yup.object({\n  email: Yup.string().email(\"Invalid email format\").required(\"Email is required\")\n});\nconst ResetPasswordRequest = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(store => store);\n  const handleSubmit = values => {\n    // You can handle login submission here, e.g., send data to your server\n    console.log(\"Login form values:\", values);\n    dispatch(resetPasswordRequest(values.email));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: \"text-center\",\n          variant: \"h5\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: validationSchema,\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"outlined\",\n              margin: \"normal\",\n              fullWidth: true,\n              label: \"Email Address\",\n              name: \"email\",\n              id: \"email\",\n              autoComplete: \"email\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              sx: {\n                mt: 2,\n                padding: \"1rem\"\n              },\n              children: \"Send Reset Password Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: \"#fff\",\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: auth.isLoading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ResetPasswordRequest, \"QwScIm/j+ZI+QhI+xvClI9dysJo=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = ResetPasswordRequest;\nexport default ResetPasswordRequest;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordRequest\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","Button","TextField","Typography","CssBaseline","Container","createTheme","ThemeProvider","Backdrop","CircularProgress","useNavigate","useDispatch","useSelector","loginUser","resetPassword","resetPasswordRequest","jsxDEV","_jsxDEV","Fragment","_Fragment","initialValues","email","validationSchema","object","string","required","ResetPasswordRequest","_s","navigate","dispatch","auth","store","handleSubmit","values","console","log","children","component","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","className","variant","onSubmit","as","margin","fullWidth","label","name","id","autoComplete","helperText","type","color","sx","mt","padding","zIndex","theme","drawer","open","isLoading","_c","$RefreshReg$"],"sources":["D:/public/Downloads/food-ordering-project-2024-02-07-03-39-35/Source/frontend-react/src/customers/pages/Auth/ResetPaswordRequest.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  CssBaseline,\r\n  Container,\r\n  createTheme,\r\n  ThemeProvider,\r\n  Backdrop,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  loginUser,\r\n  resetPassword,\r\n  resetPasswordRequest,\r\n} from \"../../../State/Authentication/Action\";\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string()\r\n    .email(\"Invalid email format\")\r\n    .required(\"Email is required\"),\r\n});\r\n\r\nconst ResetPasswordRequest = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const {auth}=useSelector(store=>store)\r\n\r\n  const handleSubmit = (values) => {\r\n    // You can handle login submission here, e.g., send data to your server\r\n    console.log(\"Login form values:\", values);\r\n    dispatch(resetPasswordRequest(values.email));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div>\r\n          <Typography className=\"text-center\" variant=\"h5\">\r\n            Forgot Password\r\n          </Typography>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <Form>\r\n              <Field\r\n                as={TextField}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                autoComplete=\"email\"\r\n                helperText={<ErrorMessage name=\"email\" />}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ mt: 2,padding:\"1rem\" }}\r\n              >\r\n                Send Reset Password Link\r\n              </Button>\r\n            </Form>\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n      <Backdrop\r\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={auth.isLoading}\r\n        \r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordRequest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}