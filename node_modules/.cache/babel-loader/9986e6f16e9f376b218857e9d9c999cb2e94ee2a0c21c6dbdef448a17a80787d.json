{"ast":null,"code":"var _jsxFileName = \"D:\\\\public\\\\Downloads\\\\food-ordering-project-2024-02-07-03-39-35\\\\Source\\\\frontend-react\\\\src\\\\customers\\\\components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button, TextField, Typography, CssBaseline, Container, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { loginUser } from \"../../../State/Authentication/Action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\nconst validationSchema = Yup.object({\n  email: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\")\n});\nconst LoginForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = values => {\n    // You can handle login submission here, e.g., send data to your server\n    console.log(\"Login form values:\", values);\n    dispatch(loginUser({\n      data: values,\n      navigate\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"text-center\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            label: \"Email Address\",\n            name: \"email\",\n            id: \"email\",\n            autoComplete: \"email\",\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mt: 2,\n              padding: \"1rem\"\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        align: \"center\",\n        sx: {\n          mt: 3\n        },\n        children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/account/register\"),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","Button","TextField","Typography","CssBaseline","Container","createTheme","ThemeProvider","useNavigate","useDispatch","loginUser","jsxDEV","_jsxDEV","initialValues","email","password","validationSchema","object","string","required","LoginForm","_s","navigate","dispatch","handleSubmit","values","console","log","data","component","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","className","variant","onSubmit","as","margin","fullWidth","label","name","id","autoComplete","helperText","type","color","sx","mt","padding","align","onClick","_c","$RefreshReg$"],"sources":["D:/public/Downloads/food-ordering-project-2024-02-07-03-39-35/Source/frontend-react/src/customers/components/Login/Login.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  CssBaseline,\r\n  Container,\r\n  createTheme,\r\n  ThemeProvider,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../../../State/Authentication/Action\";\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string()\r\n    .email(\"Invalid email format\")\r\n    .required(\"Email is required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (values) => {\r\n    // You can handle login submission here, e.g., send data to your server\r\n    console.log(\"Login form values:\", values);\r\n    dispatch(loginUser({ data: values, navigate }));\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div>\r\n        <Typography className=\"text-center\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Form>\r\n            <Field\r\n              as={TextField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              autoComplete=\"email\"\r\n              helperText={<ErrorMessage name=\"email\" />}\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              helperText={<ErrorMessage name=\"password\" />}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{ mt: 2,padding:\"1rem\" }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Form>\r\n        </Formik>\r\n        <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\r\n          Don't have an account?{\" \"}\r\n          <Button onClick={() => navigate(\"/account/register\")}>\r\n            Register\r\n          </Button>\r\n        </Typography>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}