{"ast":null,"code":"// actions.js\nimport axios from \"axios\";\nimport { UPDATE_ORDER_STATUS_REQUEST, UPDATE_ORDER_STATUS_SUCCESS, UPDATE_ORDER_STATUS_FAILURE, GET_RESTAURANTS_ORDER_REQUEST, GET_RESTAURANTS_ORDER_SUCCESS, GET_RESTAURANTS_ORDER_FAILURE } from \"./ActionType.js\";\nimport { api } from \"../../../config/api.js\";\nexport const updateOrderStatus = ({\n  orderId,\n  orderStatus,\n  jwt\n}) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: UPDATE_ORDER_STATUS_REQUEST\n      });\n      const response = await api.put(`/api/admin/orders/${orderId}/${orderStatus}`, {}, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      const updatedOrder = response.data;\n      console.log(\"udpdated order \", updatedOrder);\n      dispatch({\n        type: UPDATE_ORDER_STATUS_SUCCESS,\n        payload: updatedOrder\n      });\n    } catch (error) {\n      console.log(\"catch error \", error);\n      dispatch({\n        type: UPDATE_ORDER_STATUS_FAILURE,\n        error\n      });\n    }\n  };\n};\nexport const fetchRestaurantsOrder = ({\n  restaurantId,\n  orderStatus,\n  jwt\n}) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_RESTAURANTS_ORDER_REQUEST\n      });\n      const {\n        data\n      } = await api.get(`/api/admin/order/restaurant/${restaurantId}`, {\n        params: {\n          order_status: orderStatus\n        },\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      const orders = data;\n      console.log(\"restaurants order ------ \", orders);\n      dispatch({\n        type: GET_RESTAURANTS_ORDER_SUCCESS,\n        payload: orders\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_RESTAURANTS_ORDER_FAILURE,\n        error\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","UPDATE_ORDER_STATUS_REQUEST","UPDATE_ORDER_STATUS_SUCCESS","UPDATE_ORDER_STATUS_FAILURE","GET_RESTAURANTS_ORDER_REQUEST","GET_RESTAURANTS_ORDER_SUCCESS","GET_RESTAURANTS_ORDER_FAILURE","api","updateOrderStatus","orderId","orderStatus","jwt","dispatch","type","response","put","headers","Authorization","updatedOrder","data","console","log","payload","error","fetchRestaurantsOrder","restaurantId","get","params","order_status","orders"],"sources":["D:/public/Downloads/food-ordering-project-2024-02-07-03-39-35/Source/frontend-react/src/State/Admin/Order/restaurants.order.action.js"],"sourcesContent":["// actions.js\r\nimport axios from \"axios\";\r\nimport {\r\n  UPDATE_ORDER_STATUS_REQUEST,\r\n  UPDATE_ORDER_STATUS_SUCCESS,\r\n  UPDATE_ORDER_STATUS_FAILURE,\r\n  GET_RESTAURANTS_ORDER_REQUEST,\r\n  GET_RESTAURANTS_ORDER_SUCCESS,\r\n  GET_RESTAURANTS_ORDER_FAILURE,\r\n} from \"./ActionType.js\";\r\nimport { api } from \"../../../config/api.js\";\r\n\r\nexport const updateOrderStatus = ({orderId,orderStatus,jwt}) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: UPDATE_ORDER_STATUS_REQUEST });\r\n\r\n      const response = await api.put(\r\n        `/api/admin/orders/${orderId}/${orderStatus}`,{},{\r\n          headers: {\r\n            Authorization: `Bearer ${jwt}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const updatedOrder = response.data;\r\n\r\n      console.log(\"udpdated order \", updatedOrder);\r\n\r\n      dispatch({\r\n        type: UPDATE_ORDER_STATUS_SUCCESS,\r\n        payload: updatedOrder,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"catch error \", error);\r\n      dispatch({ type: UPDATE_ORDER_STATUS_FAILURE, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchRestaurantsOrder = ({restaurantId,orderStatus,jwt}) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: GET_RESTAURANTS_ORDER_REQUEST });\r\n\r\n      const { data } = await api.get(\r\n        `/api/admin/order/restaurant/${restaurantId}`,{\r\n          params: { order_status:orderStatus},\r\n          headers: {\r\n            Authorization: `Bearer ${jwt}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const orders = data;\r\n      console.log(\"restaurants order ------ \", orders);\r\n      dispatch({\r\n        type: GET_RESTAURANTS_ORDER_SUCCESS,\r\n        payload: orders,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_RESTAURANTS_ORDER_FAILURE, error });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,2BAA2B,EAC3BC,2BAA2B,EAC3BC,2BAA2B,EAC3BC,6BAA6B,EAC7BC,6BAA6B,EAC7BC,6BAA6B,QACxB,iBAAiB;AACxB,SAASC,GAAG,QAAQ,wBAAwB;AAE5C,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAACC,OAAO;EAACC,WAAW;EAACC;AAAG,CAAC,KAAK;EAC9D,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEC,IAAI,EAAEZ;MAA4B,CAAC,CAAC;MAE/C,MAAMa,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAC3B,qBAAoBN,OAAQ,IAAGC,WAAY,EAAC,EAAC,CAAC,CAAC,EAAC;QAC/CM,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,GAAI;QAC/B;MACF,CACF,CAAC;MAED,MAAMO,YAAY,GAAGJ,QAAQ,CAACK,IAAI;MAElCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,YAAY,CAAC;MAE5CN,QAAQ,CAAC;QACPC,IAAI,EAAEX,2BAA2B;QACjCoB,OAAO,EAAEJ;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEE,KAAK,CAAC;MAClCX,QAAQ,CAAC;QAAEC,IAAI,EAAEV,2BAA2B;QAAEoB;MAAM,CAAC,CAAC;IACxD;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAGA,CAAC;EAACC,YAAY;EAACf,WAAW;EAACC;AAAG,CAAC,KAAK;EACvE,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEC,IAAI,EAAET;MAA8B,CAAC,CAAC;MAEjD,MAAM;QAAEe;MAAK,CAAC,GAAG,MAAMZ,GAAG,CAACmB,GAAG,CAC3B,+BAA8BD,YAAa,EAAC,EAAC;QAC5CE,MAAM,EAAE;UAAEC,YAAY,EAAClB;QAAW,CAAC;QACnCM,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,GAAI;QAC/B;MACF,CACF,CAAC;MAED,MAAMkB,MAAM,GAAGV,IAAI;MACnBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEQ,MAAM,CAAC;MAChDjB,QAAQ,CAAC;QACPC,IAAI,EAAER,6BAA6B;QACnCiB,OAAO,EAAEO;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAON,KAAK,EAAE;MACdX,QAAQ,CAAC;QAAEC,IAAI,EAAEP,6BAA6B;QAAEiB;MAAM,CAAC,CAAC;IAC1D;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}