{"ast":null,"code":"var _jsxFileName = \"D:\\\\public\\\\Downloads\\\\food-ordering-project-2024-02-07-03-39-35\\\\Source\\\\frontend-react\\\\src\\\\customers\\\\pages\\\\Auth\\\\ResetPasswordForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { resetPassword } from \"../../../State/Authentication/Action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n  confirmedPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirmed password is required\")\n});\nfunction ResetPasswordForm() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const token = searchParams.get(\"token\");\n  const initialValues = {\n    password: \"\",\n    confirmedPassword: \"\"\n  };\n  const handleSubmit = (values, {\n    setSubmitting\n  }) => {\n    // Handle form submission here\n    console.log(values);\n    if (values.password === values.confirmedPassword) {\n      console.log(\"yes its working....\");\n    }\n    const data = {\n      password: values.password,\n      token\n    };\n    dispatch(resetPassword({\n      navigate,\n      data\n    }));\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"space-y-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              name: \"password\",\n              placeholder: \"Password\",\n              type: \"password\",\n              variant: \"outlined\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"text-red-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              name: \"confirmedPassword\",\n              placeholder: \"Confirmed Password\",\n              type: \"password\",\n              variant: \"outlined\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"confirmedPassword\",\n              component: \"div\",\n              className: \"text-red-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            padding: \".8rem 0rem\"\n          },\n          fullWidth: true,\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ResetPasswordForm, \"PuWtlVOfL/s0EpXU/VzF9Tl6gnk=\", false, function () {\n  return [useNavigate, useDispatch, useLocation];\n});\n_c = ResetPasswordForm;\nexport default ResetPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordForm\");","map":{"version":3,"names":["React","Formik","Field","Form","ErrorMessage","Yup","TextField","Button","useLocation","useNavigate","useDispatch","resetPassword","jsxDEV","_jsxDEV","Fragment","_Fragment","validationSchema","object","shape","password","string","min","required","confirmedPassword","oneOf","ref","ResetPasswordForm","_s","navigate","dispatch","location","searchParams","URLSearchParams","search","token","get","initialValues","handleSubmit","values","setSubmitting","console","log","data","children","onSubmit","className","as","name","placeholder","type","variant","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","component","sx","padding","color","_c","$RefreshReg$"],"sources":["D:/public/Downloads/food-ordering-project-2024-02-07-03-39-35/Source/frontend-react/src/customers/pages/Auth/ResetPasswordForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetPassword } from \"../../../State/Authentication/Action\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .required(\"Password is required\"),\r\n  confirmedPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirmed password is required\"),\r\n});\r\n\r\nfunction ResetPasswordForm() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const token = searchParams.get(\"token\");\r\n\r\n  const initialValues = {\r\n    password: \"\",\r\n    confirmedPassword: \"\",\r\n  };\r\n\r\n  const handleSubmit = (values, { setSubmitting }) => {\r\n    // Handle form submission here\r\n    console.log(values);\r\n    if (values.password === values.confirmedPassword) {\r\n      console.log(\"yes its working....\");\r\n    }\r\n    const data = { password: values.password, token };\r\n    dispatch(resetPassword({ navigate, data }));\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Form className=\"space-y-5\">\r\n          <div className=\"space-y-5\">\r\n            <div>\r\n              <Field\r\n                as={TextField}\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"text-red-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Field\r\n                as={TextField}\r\n                name=\"confirmedPassword\"\r\n                placeholder=\"Confirmed Password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n              <ErrorMessage\r\n                name=\"confirmedPassword\"\r\n                component=\"div\"\r\n                className=\"text-red-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <Button\r\n            sx={{ padding: \".8rem 0rem\" }}\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}